---
layout: post
title:  "2.Springboot&JPA ENTITY 작성"
date:   2021-01-17 22:00:20 +0900
categories: Springboot JPA Blog
---
## 1. 테이블(JPA ENTITY)

#### 1. 메뉴 관리를 위한 메뉴 테이블 (진행중 필요시 생성)

#### 2. 게시글 테이블
```java
@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder // 빌더 패턴
@Entity
public class Board {
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY) // auto_increment (시퀀스)
	private int id;

	@Column(nullable = false, length = 100, unique = true) // 제목
	private String title;

	@Lob
	private String content; // 섬머노트 라이브러리 <html> 태그가 섞여서 디자인이 됨.

	private int count; // 조회수
	
	@Column(nullable = false)	
	private String menuId;

	@ManyToOne(fetch = FetchType.EAGER) // Many = Board, User = one
	@JoinColumn(name = "userId")
	private User user; // DB는 오브젝트를 저장할 수 없다.FK, 자바는 오브젝트를 저장할 수 있다.

	@OneToMany(mappedBy = "board", fetch = FetchType.EAGER, cascade = CascadeType.REMOVE) // mappedBy 연관관계의 주인이 아니다.(컬럼 만들지 않음)
	@JsonIgnoreProperties({ "board" })
	@OrderBy("id asc")
	private List<Reply> replys;

	@CreationTimestamp
	private Timestamp createDate;
	
}

```
#### 3. 회원 테이블
```java
@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder // 빌더 패턴
@Entity //User 클래스가 MySql에 테이블이 생성된다.
//@DynamicInsert //insert시에 null인 필드 제외
public class User {
	
	@Id //primary key
	@GeneratedValue(strategy = GenerationType.IDENTITY) //프로젝트에서 연결된 db에 넘버링 전략을 따라감
	private int id;
	
	@Column(nullable = false, length=30, unique = true)
	private String username; //아이디
	
	@Column(nullable = false, length=300)
	private String password; //해쉬로 암호화 하기 떄문에 넉넉하게 작성
	
	@Column(nullable = false, length=50)
	private String email;
	
	//@ColumnDefault("'user'")
	// DB는 RoleType이 없다.
	@Enumerated(EnumType.STRING)
	private RoleType role; //enum 사용하는게 좋음.//admin, user
	
	private String oauth; //kakao, google
	
	@CreationTimestamp //시간이 자동으로 입력
	private Timestamp createDate;	
}
```
#### 4. 댓글 테이블
```java
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Data
@Entity
@ToString(exclude = "board")
public class Reply {
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private int id;
	
	@Column(nullable = false, length = 200)
	private String content;
	
	@Column
	private String prntContent;
	
	@ManyToOne
	@JoinColumn(name = "boardId")
	private Board board;
	
	@ManyToOne
	@JoinColumn(name = "userId")
	private User user;
	
	@CreationTimestamp
	private Timestamp createDate;
	
}
```

