---
layout: post
title:  "자료형 (리스트)"
date:   2022-03-13 22:28:20 +0900
categories: Python
---

<hr>

# 리스트

## 리스트 사용법

리스트를 만들 때는 위에서 보는 것과 같이 대괄호([ ])로 감싸 주고 각 요솟값은 쉼표(,)로 구분해 준다.

```python
리스트명 = [요소1, 요소2, 요소3, ...]
```

리스트는 a처럼 아무것도 포함하지 않아 비어 있는 리스트([ ])일 수도 있고 b처럼 숫자를 요솟값으로 가질 수도 있고 c처럼 문자열을 요솟값으로 가질 수도 있다. 또한 d처럼 숫자와 문자열을 함께 요솟값으로 가질 수도 있으며 e처럼 리스트 자체를 요솟값으로 가질 수도 있다. 즉 리스트 안에는 어떠한 자료형도 포함시킬 수 있다.

> ※ 비어 있는 리스트는 a = list()로 생성할 수도 있다.
> 

```python
>>> a = []
>>> b = [1, 2, 3]
>>> c = ['Life', 'is', 'too', 'short']
>>> d = [1, 2, 'Life', 'is']
>>> e = [1, 2, ['Life', 'is']]
```

## 리스트의 인덱싱과 슬라이싱

### 리스트의 인덱싱

리스트 역시 문자열처럼 인덱싱을 적용할 수 있다.

```python
>>> a = [1, 2, 3]
>>> a[0]
1

>>> a[0] + a[2]
4

>>> a = [1, 2, 3, ['a', 'b', 'c']] # 이중리스트
>>> a[0]
1
>>> a[-1]
['a', 'b', 'c']
>>> a[3]
['a', 'b', 'c']

>>> a[-1][0]
'a'
```

### 리스트의 슬라이싱

문자여로가 동일하다.

```python
>>> a = [1, 2, 3, 4, 5]
>>> a[0:2]
[1, 2]

# 이중리스트 슬라이싱
>>> a = [1, 2, 3, ['a', 'b', 'c'], 4, 5]
>>> a[2:5]
[3, ['a', 'b', 'c'], 4]
>>> a[3][:2]
['a', 'b']
```

## 리스트 연산하기

리스트 더하기(+)

```python
>>> a = [1, 2, 3]
>>> b = [4, 5, 6]
>>> a + b
[1, 2, 3, 4, 5, 6]
```

리스트 반복하기(*)

```python
>>> a = [1, 2, 3]
>>> a * 3
[1, 2, 3, 1, 2, 3, 1, 2, 3]
```

리스트 길이구하기

```python
>>> a = [1, 2, 3]
>>> len(a)
3
```

## 리스트의 수정과 삭제

### 리스트에서 값 수정

```python
>>> a = [1, 2, 3]
>>> a[2] = 4
>>> a
[1, 2, 4]
```

### dle 함수 사용해 리스트 요소 삭제

```python
>>> a = [1, 2, 3]
>>> del a[1]
>>> a
[1, 3]

# 슬라이싱 기법을 이용한 여러 요소 삭제
>>> a = [1, 2, 3, 4, 5]
>>> del a[2:]
>>> a
[1, 2]
```

## 리스트 관련 함수

### 리스트에 요소 추가 (append)

```python
>>> a = [1, 2, 3]
>>> a.append(4)
>>> a
[1, 2, 3, 4]

# 리스트에 리스트 추가
>>> a.append([5,6])
>>> a
[1, 2, 3, 4, [5, 6]]
```

### 리스트 정렬 (sort)

```python
>>> a = [1, 4, 3, 2]
>>> a.sort()
>>> a
[1, 2, 3, 4]

>>> a = ['a', 'c', 'b']
>>> a.sort()
>>> a
['a', 'b', 'c']
```

### 리스트 뒤집기 (reverse)

```python
>>> a = ['a', 'c', 'b']
>>> a.reverse()
>>> a
['b', 'c', 'a']
```

### 위치 반환 (index)

```python
>>> a = [1,2,3]
>>> a.index(3)
2
>>> a.index(1)
0
```

만약 값이 존재하지 않을 시 오류가 발생한다.

### 리스트에 요소 삽입 (insert)

```python
>>> a = [1, 2, 3]
>>> a.insert(0, 4)
>>> a
[4, 1, 2, 3]
```

### 리스트 요소 제거 (remove)

remove(x)는 리스트에서 첫 번째로 나오는 x를 삭제하는 함수이다.

```python
>>> a = [1, 2, 3, 1, 2, 3]
>>> a.remove(3)
>>> a
[1, 2, 1, 2, 3]
```

### 리스트 요소 끄집어내기 (pop)

pop()은 리스트의 맨 마지막 요소를 돌려주고 그 요소는 삭제한다.

```python
>>> a = [1,2,3]
>>> a.pop()
3
>>> a
[1, 2]
```

pop(x)는 리스트의 x번째 요소를 돌려주고 그 요소는 삭제한다.

```python
>>> a = [1,2,3]
>>> a.pop(1)
2
>>> a
[1, 3]
```

### 리스트에 포함된 요소 x의 개수 세기 (count)

```python
>>> a = [1,2,3,1]
>>> a.count(1)
2
```

### 리스트 확장 (extend)

extend(x)에서 x에는 리스트만 올 수 있으며 원래의 a 리스트에 x 리스트를 더하게 된다.

```python
>>> a = [1,2,3]
>>> a.extend([4,5])
>>> a
[1, 2, 3, 4, 5]
>>> b = [6, 7]
>>> a.extend(b)
>>> a
[1, 2, 3, 4, 5, 6, 7]
```